"use client"
import React, { useEffect, useState } from 'react'
import { motion } from 'framer-motion'


const draw = {
   hidden: { pathLength: 0, opacity: 0 },
   visible: (i: number) => {
      const delay = i * 0.1
      return {
         pathLength: 1,
         opacity: 1,
         transition: {
            pathLength: { delay, type: "spring", duration: 1.5, bounce: 0 },
            opacity: { delay, duration: 0.01 },
         },
      }
   },
}

const Loading: React.FC<{
   children: React.ReactNode;
}> = ({ children }) => {
   const [isLoading, setIsLoading] = useState(true);

   useEffect(() => {
      const timer = setTimeout(() => setIsLoading(false), 1500);
      return () => clearTimeout(timer);
   }, []);

   return (
      <div className="relative">
         {isLoading && (
            <div className="absolute inset-0 z-50 h-screen flex items-center justify-center">
               <motion.svg variants={draw} width="99" height="89" viewBox="0 0 89 79" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <motion.path variants={draw} initial='hidden' animate='visible' d="M9.30612 50.4986C7.2841 54.1541 2.81651 61.6871 0.900889 64.9045C0.503581 65.5718 0.986509 66.4151 1.76314 66.4151H13.9752C14.9194 66.4151 15.3421 65.2205 14.6229 64.6088C14.2119 64.2593 13.864 63.9519 13.7143 63.7915C13.2245 63.2668 12.7347 61.5177 13.2245 59.069C13.5843 57.2704 16.2343 51.3195 17.616 48.2868C17.9574 47.5373 19.003 47.5046 19.397 48.2279C21.2708 51.6682 25.4389 59.2031 27.4286 61.8676C30.0408 65.3657 33.9592 68.6889 36.898 70.7878C39.8367 72.8867 51.102 78.3088 50.449 76.9095C49.7959 75.5103 38.3673 70.438 31.8367 61.1679C25.3061 51.8979 22.3673 41.7533 21.551 40.0042C20.9645 38.7475 19.2822 36.4974 18.3816 35.3303C18.0146 34.8548 17.4463 34.5821 16.8457 34.5821C16.4349 34.5821 16.0692 34.8298 15.9216 35.2131C14.9865 37.6414 11.5461 46.4492 9.30612 50.4986Z" />
                  <motion.path variants={draw} initial='hidden' animate='visible' d="M18.449 31.4338C13.9165 27.2526 5.40351 23.1753 1.74437 21.5281C1.43244 21.3877 1.55628 20.9233 1.89599 20.9634C4.64419 21.2881 9.78144 22.0356 13.2245 23.3881C18.1224 25.312 23.3469 28.2855 26.2857 30.9091C29.2245 33.5327 33.3061 38.2551 36.898 43.6772C40.4898 49.0994 44.898 53.9967 50.449 58.1945C56 62.3923 68.898 70.2631 75.2653 73.0616C81.6327 75.8601 88 76.7346 88 77.2593C88 77.7841 69.8775 78.4837 65.3061 77.7841C60.7347 77.0844 49.6327 74.2859 43.2653 67.6395C36.898 60.993 34.1224 56.9702 30.6939 49.0994C27.2653 41.2286 24.3265 36.8559 18.449 31.4338Z" />
                  <motion.path variants={draw} initial='hidden' animate='visible' d="M22.6939 25.8368C21.3878 24.9622 19.7551 24.4375 19.7551 24.4375L26.1224 8.6959C27.7551 3.44869 25.7959 2.22435 25.7959 2.22435C25.1429 2.22435 25.3061 1 25.3061 1H39.8367L59.9184 55.5709C62.3673 61.1679 65.7959 65.8904 65.7959 65.8904L47.6735 53.472L32.6531 11.6693L25.4694 28.2855C24.4898 27.0611 24 26.7113 22.6939 25.8368Z" />
                  <motion.path variants={draw} initial='hidden' animate='visible' d="M9.30612 50.4986C7.2841 54.1541 2.81651 61.6871 0.900889 64.9045C0.503581 65.5718 0.986509 66.4151 1.76314 66.4151H13.9752C14.9194 66.4151 15.3421 65.2205 14.6229 64.6088C14.2119 64.2593 13.864 63.9519 13.7143 63.7915C13.2245 63.2668 12.7347 61.5177 13.2245 59.069C13.5843 57.2704 16.2343 51.3195 17.616 48.2868C17.9574 47.5373 19.003 47.5046 19.397 48.2279C21.2708 51.6682 25.4389 59.2031 27.4286 61.8676C30.0408 65.3657 33.9592 68.6889 36.898 70.7878C39.8367 72.8867 51.102 78.3088 50.449 76.9095C49.7959 75.5103 38.3673 70.438 31.8367 61.1679C25.3061 51.8979 22.3673 41.7533 21.551 40.0042C20.9645 38.7475 19.2822 36.4974 18.3816 35.3303C18.0146 34.8548 17.4463 34.5821 16.8457 34.5821C16.4349 34.5821 16.0692 34.8298 15.9216 35.2131C14.9865 37.6414 11.5461 46.4492 9.30612 50.4986Z" stroke="#25449F" />
                  <motion.path variants={draw} initial='hidden' animate='visible' d="M18.449 31.4338C13.9165 27.2526 5.40351 23.1753 1.74437 21.5281C1.43244 21.3877 1.55628 20.9233 1.89599 20.9634C4.64419 21.2881 9.78144 22.0356 13.2245 23.3881C18.1224 25.312 23.3469 28.2855 26.2857 30.9091C29.2245 33.5327 33.3061 38.2551 36.898 43.6772C40.4898 49.0994 44.898 53.9967 50.449 58.1945C56 62.3923 68.898 70.2631 75.2653 73.0616C81.6327 75.8601 88 76.7346 88 77.2593C88 77.7841 69.8775 78.4837 65.3061 77.7841C60.7347 77.0844 49.6327 74.2859 43.2653 67.6395C36.898 60.993 34.1224 56.9702 30.6939 49.0994C27.2653 41.2286 24.3265 36.8559 18.449 31.4338Z" stroke="#25449F" />
                  <motion.path variants={draw} initial='hidden' animate='visible' d="M22.6939 25.8368C21.3878 24.9622 19.7551 24.4375 19.7551 24.4375L26.1224 8.6959C27.7551 3.44869 25.7959 2.22435 25.7959 2.22435C25.1429 2.22435 25.3061 1 25.3061 1H39.8367L59.9184 55.5709C62.3673 61.1679 65.7959 65.8904 65.7959 65.8904L47.6735 53.472L32.6531 11.6693L25.4694 28.2855C24.4898 27.0611 24 26.7113 22.6939 25.8368Z" stroke="#25449F" />
               </motion.svg>
            </div>
         )}
         <div className={`${isLoading ? "opacity-0" : "opacity-100"} transition-opacity duration-500`}>
            {children}
         </div>
      </div>
   )
}

export default Loading